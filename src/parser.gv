// Generated by GNU Bison 3.8.2.
// Report bugs to <bug-bison@gnu.org>.
// Home page: <https://www.gnu.org/software/bison/>.

digraph "/home/stanislav/Mipt/compilers-course/nezoku/src/parser.y"
{
  node [fontname = courier, shape = box, colorscheme = paired6]
  edge [fontname = courier]

  0 [label="State 0\n\l  0 $accept: • translation_unit END\l"]
  0 -> 1 [style=solid label="BOOL_T"]
  0 -> 2 [style=solid label="CHAR_T"]
  0 -> 3 [style=solid label="FLOAT_32_T"]
  0 -> 4 [style=solid label="FLOAT_64_T"]
  0 -> 5 [style=solid label="INT_8_T"]
  0 -> 6 [style=solid label="UINT_8_T"]
  0 -> 7 [style=solid label="INT_16_T"]
  0 -> 8 [style=solid label="UINT_16_T"]
  0 -> 9 [style=solid label="INT_32_T"]
  0 -> 10 [style=solid label="UINT_32_T"]
  0 -> 11 [style=solid label="INT_64_T"]
  0 -> 12 [style=solid label="UINT_64_T"]
  0 -> 13 [style=dashed label="translation_unit"]
  0 -> 14 [style=dashed label="external_declaration"]
  0 -> 15 [style=dashed label="declaration"]
  0 -> 16 [style=dashed label="type_specifier"]
  0 -> 17 [style=dashed label="function_definition"]
  1 [label="State 1\n\l 15 type_specifier: BOOL_T •\l"]
  1 -> "1R15" [style=solid]
 "1R15" [label="R15", fillcolor=3, shape=diamond, style=filled]
  2 [label="State 2\n\l 16 type_specifier: CHAR_T •\l"]
  2 -> "2R16" [style=solid]
 "2R16" [label="R16", fillcolor=3, shape=diamond, style=filled]
  3 [label="State 3\n\l 17 type_specifier: FLOAT_32_T •\l"]
  3 -> "3R17" [style=solid]
 "3R17" [label="R17", fillcolor=3, shape=diamond, style=filled]
  4 [label="State 4\n\l 18 type_specifier: FLOAT_64_T •\l"]
  4 -> "4R18" [style=solid]
 "4R18" [label="R18", fillcolor=3, shape=diamond, style=filled]
  5 [label="State 5\n\l  7 type_specifier: INT_8_T •\l"]
  5 -> "5R7" [style=solid]
 "5R7" [label="R7", fillcolor=3, shape=diamond, style=filled]
  6 [label="State 6\n\l 11 type_specifier: UINT_8_T •\l"]
  6 -> "6R11" [style=solid]
 "6R11" [label="R11", fillcolor=3, shape=diamond, style=filled]
  7 [label="State 7\n\l  8 type_specifier: INT_16_T •\l"]
  7 -> "7R8" [style=solid]
 "7R8" [label="R8", fillcolor=3, shape=diamond, style=filled]
  8 [label="State 8\n\l 12 type_specifier: UINT_16_T •\l"]
  8 -> "8R12" [style=solid]
 "8R12" [label="R12", fillcolor=3, shape=diamond, style=filled]
  9 [label="State 9\n\l  9 type_specifier: INT_32_T •\l"]
  9 -> "9R9" [style=solid]
 "9R9" [label="R9", fillcolor=3, shape=diamond, style=filled]
  10 [label="State 10\n\l 13 type_specifier: UINT_32_T •\l"]
  10 -> "10R13" [style=solid]
 "10R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
  11 [label="State 11\n\l 10 type_specifier: INT_64_T •\l"]
  11 -> "11R10" [style=solid]
 "11R10" [label="R10", fillcolor=3, shape=diamond, style=filled]
  12 [label="State 12\n\l 14 type_specifier: UINT_64_T •\l"]
  12 -> "12R14" [style=solid]
 "12R14" [label="R14", fillcolor=3, shape=diamond, style=filled]
  13 [label="State 13\n\l  0 $accept: translation_unit • END\l  2 translation_unit: translation_unit • external_declaration\l"]
  13 -> 18 [style=solid label="END"]
  13 -> 1 [style=solid label="BOOL_T"]
  13 -> 2 [style=solid label="CHAR_T"]
  13 -> 3 [style=solid label="FLOAT_32_T"]
  13 -> 4 [style=solid label="FLOAT_64_T"]
  13 -> 5 [style=solid label="INT_8_T"]
  13 -> 6 [style=solid label="UINT_8_T"]
  13 -> 7 [style=solid label="INT_16_T"]
  13 -> 8 [style=solid label="UINT_16_T"]
  13 -> 9 [style=solid label="INT_32_T"]
  13 -> 10 [style=solid label="UINT_32_T"]
  13 -> 11 [style=solid label="INT_64_T"]
  13 -> 12 [style=solid label="UINT_64_T"]
  13 -> 19 [style=dashed label="external_declaration"]
  13 -> 15 [style=dashed label="declaration"]
  13 -> 16 [style=dashed label="type_specifier"]
  13 -> 17 [style=dashed label="function_definition"]
  14 [label="State 14\n\l  1 translation_unit: external_declaration •\l"]
  14 -> "14R1" [style=solid]
 "14R1" [label="R1", fillcolor=3, shape=diamond, style=filled]
  15 [label="State 15\n\l  3 external_declaration: declaration •\l"]
  15 -> "15R3" [style=solid]
 "15R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  16 [label="State 16\n\l  5 declaration: type_specifier • IDENTIFIER SEMICOLON\l  6            | type_specifier • IDENTIFIER ASSIGN expression SEMICOLON\l 19 function_definition: type_specifier • IDENTIFIER LPAREN parameter_list RPAREN statement\l"]
  16 -> 20 [style=solid label="IDENTIFIER"]
  17 [label="State 17\n\l  4 external_declaration: function_definition •\l"]
  17 -> "17R4" [style=solid]
 "17R4" [label="R4", fillcolor=3, shape=diamond, style=filled]
  18 [label="State 18\n\l  0 $accept: translation_unit END •\l"]
  18 -> "18R0" [style=solid]
 "18R0" [label="Acc", fillcolor=1, shape=diamond, style=filled]
  19 [label="State 19\n\l  2 translation_unit: translation_unit external_declaration •\l"]
  19 -> "19R2" [style=solid]
 "19R2" [label="R2", fillcolor=3, shape=diamond, style=filled]
  20 [label="State 20\n\l  5 declaration: type_specifier IDENTIFIER • SEMICOLON\l  6            | type_specifier IDENTIFIER • ASSIGN expression SEMICOLON\l 19 function_definition: type_specifier IDENTIFIER • LPAREN parameter_list RPAREN statement\l"]
  20 -> 21 [style=solid label="SEMICOLON"]
  20 -> 22 [style=solid label="ASSIGN"]
  20 -> 23 [style=solid label="LPAREN"]
  21 [label="State 21\n\l  5 declaration: type_specifier IDENTIFIER SEMICOLON •\l"]
  21 -> "21R5" [style=solid]
 "21R5" [label="R5", fillcolor=3, shape=diamond, style=filled]
  22 [label="State 22\n\l  6 declaration: type_specifier IDENTIFIER ASSIGN • expression SEMICOLON\l"]
  22 -> 24 [style=solid label="IDENTIFIER"]
  22 -> 25 [style=solid label="CONSTANT"]
  22 -> 26 [style=solid label="STRING_LITERAL"]
  22 -> 27 [style=solid label="LPAREN"]
  22 -> 28 [style=dashed label="expression"]
  22 -> 29 [style=dashed label="assignment_expression"]
  22 -> 30 [style=dashed label="logical_or_expression"]
  22 -> 31 [style=dashed label="logical_and_expression"]
  22 -> 32 [style=dashed label="inclusive_or_expression"]
  22 -> 33 [style=dashed label="exclusive_or_expression"]
  22 -> 34 [style=dashed label="and_expression"]
  22 -> 35 [style=dashed label="equality_expression"]
  22 -> 36 [style=dashed label="relational_expression"]
  22 -> 37 [style=dashed label="shift_expression"]
  22 -> 38 [style=dashed label="additive_expression"]
  22 -> 39 [style=dashed label="multiplicative_expression"]
  22 -> 40 [style=dashed label="primary_expression"]
  23 [label="State 23\n\l 19 function_definition: type_specifier IDENTIFIER LPAREN • parameter_list RPAREN statement\l"]
  23 -> 1 [style=solid label="BOOL_T"]
  23 -> 2 [style=solid label="CHAR_T"]
  23 -> 3 [style=solid label="FLOAT_32_T"]
  23 -> 4 [style=solid label="FLOAT_64_T"]
  23 -> 5 [style=solid label="INT_8_T"]
  23 -> 6 [style=solid label="UINT_8_T"]
  23 -> 7 [style=solid label="INT_16_T"]
  23 -> 8 [style=solid label="UINT_16_T"]
  23 -> 9 [style=solid label="INT_32_T"]
  23 -> 10 [style=solid label="UINT_32_T"]
  23 -> 11 [style=solid label="INT_64_T"]
  23 -> 12 [style=solid label="UINT_64_T"]
  23 -> 41 [style=dashed label="type_specifier"]
  23 -> 42 [style=dashed label="parameter_list"]
  23 -> "23R20" [style=solid]
 "23R20" [label="R20", fillcolor=3, shape=diamond, style=filled]
  24 [label="State 24\n\l 85 primary_expression: IDENTIFIER •\l"]
  24 -> "24R85" [style=solid]
 "24R85" [label="R85", fillcolor=3, shape=diamond, style=filled]
  25 [label="State 25\n\l 86 primary_expression: CONSTANT •\l"]
  25 -> "25R86" [style=solid]
 "25R86" [label="R86", fillcolor=3, shape=diamond, style=filled]
  26 [label="State 26\n\l 87 primary_expression: STRING_LITERAL •\l"]
  26 -> "26R87" [style=solid]
 "26R87" [label="R87", fillcolor=3, shape=diamond, style=filled]
  27 [label="State 27\n\l 88 primary_expression: LPAREN • expression RPAREN\l"]
  27 -> 24 [style=solid label="IDENTIFIER"]
  27 -> 25 [style=solid label="CONSTANT"]
  27 -> 26 [style=solid label="STRING_LITERAL"]
  27 -> 27 [style=solid label="LPAREN"]
  27 -> 43 [style=dashed label="expression"]
  27 -> 29 [style=dashed label="assignment_expression"]
  27 -> 30 [style=dashed label="logical_or_expression"]
  27 -> 31 [style=dashed label="logical_and_expression"]
  27 -> 32 [style=dashed label="inclusive_or_expression"]
  27 -> 33 [style=dashed label="exclusive_or_expression"]
  27 -> 34 [style=dashed label="and_expression"]
  27 -> 35 [style=dashed label="equality_expression"]
  27 -> 36 [style=dashed label="relational_expression"]
  27 -> 37 [style=dashed label="shift_expression"]
  27 -> 38 [style=dashed label="additive_expression"]
  27 -> 39 [style=dashed label="multiplicative_expression"]
  27 -> 40 [style=dashed label="primary_expression"]
  28 [label="State 28\n\l  6 declaration: type_specifier IDENTIFIER ASSIGN expression • SEMICOLON\l"]
  28 -> 44 [style=solid label="SEMICOLON"]
  29 [label="State 29\n\l 43 expression: assignment_expression •\l"]
  29 -> "29R43" [style=solid]
 "29R43" [label="R43", fillcolor=3, shape=diamond, style=filled]
  30 [label="State 30\n\l 44 assignment_expression: logical_or_expression •\l 58 logical_or_expression: logical_or_expression • LOR logical_and_expression\l"]
  30 -> 45 [style=solid label="LOR"]
  30 -> "30R44" [style=solid]
 "30R44" [label="R44", fillcolor=3, shape=diamond, style=filled]
  31 [label="State 31\n\l 57 logical_or_expression: logical_and_expression •\l 60 logical_and_expression: logical_and_expression • LAND inclusive_or_expression\l"]
  31 -> 46 [style=solid label="LAND"]
  31 -> "31R57" [style=solid]
 "31R57" [label="R57", fillcolor=3, shape=diamond, style=filled]
  32 [label="State 32\n\l 59 logical_and_expression: inclusive_or_expression •\l 62 inclusive_or_expression: inclusive_or_expression • OR exclusive_or_expression\l"]
  32 -> 47 [style=solid label="OR"]
  32 -> "32R59" [style=solid]
 "32R59" [label="R59", fillcolor=3, shape=diamond, style=filled]
  33 [label="State 33\n\l 61 inclusive_or_expression: exclusive_or_expression •\l 64 exclusive_or_expression: exclusive_or_expression • XOR and_expression\l"]
  33 -> 48 [style=solid label="XOR"]
  33 -> "33R61" [style=solid]
 "33R61" [label="R61", fillcolor=3, shape=diamond, style=filled]
  34 [label="State 34\n\l 63 exclusive_or_expression: and_expression •\l 66 and_expression: and_expression • AND equality_expression\l"]
  34 -> 49 [style=solid label="AND"]
  34 -> "34R63" [style=solid]
 "34R63" [label="R63", fillcolor=3, shape=diamond, style=filled]
  35 [label="State 35\n\l 65 and_expression: equality_expression •\l 68 equality_expression: equality_expression • EQ relational_expression\l 69                    | equality_expression • NEQ relational_expression\l"]
  35 -> 50 [style=solid label="NEQ"]
  35 -> 51 [style=solid label="EQ"]
  35 -> "35R65" [style=solid]
 "35R65" [label="R65", fillcolor=3, shape=diamond, style=filled]
  36 [label="State 36\n\l 67 equality_expression: relational_expression •\l 71 relational_expression: relational_expression • LESS shift_expression\l 72                      | relational_expression • GREATER shift_expression\l 73                      | relational_expression • LEQ shift_expression\l 74                      | relational_expression • GEQ shift_expression\l"]
  36 -> 52 [style=solid label="GEQ"]
  36 -> 53 [style=solid label="LEQ"]
  36 -> 54 [style=solid label="LESS"]
  36 -> 55 [style=solid label="GREATER"]
  36 -> "36R67" [style=solid]
 "36R67" [label="R67", fillcolor=3, shape=diamond, style=filled]
  37 [label="State 37\n\l 70 relational_expression: shift_expression •\l 76 shift_expression: shift_expression • SHL additive_expression\l 77                 | shift_expression • SHR additive_expression\l"]
  37 -> 56 [style=solid label="SHL"]
  37 -> 57 [style=solid label="SHR"]
  37 -> "37R70" [style=solid]
 "37R70" [label="R70", fillcolor=3, shape=diamond, style=filled]
  38 [label="State 38\n\l 75 shift_expression: additive_expression •\l 79 additive_expression: additive_expression • ADD multiplicative_expression\l 80                    | additive_expression • SUB multiplicative_expression\l"]
  38 -> 58 [style=solid label="ADD"]
  38 -> 59 [style=solid label="SUB"]
  38 -> "38R75" [style=solid]
 "38R75" [label="R75", fillcolor=3, shape=diamond, style=filled]
  39 [label="State 39\n\l 78 additive_expression: multiplicative_expression •\l 82 multiplicative_expression: multiplicative_expression • MUL primary_expression\l 83                          | multiplicative_expression • DIV primary_expression\l 84                          | multiplicative_expression • MOD primary_expression\l"]
  39 -> 60 [style=solid label="MUL"]
  39 -> 61 [style=solid label="DIV"]
  39 -> 62 [style=solid label="MOD"]
  39 -> "39R78" [style=solid]
 "39R78" [label="R78", fillcolor=3, shape=diamond, style=filled]
  40 [label="State 40\n\l 45 assignment_expression: primary_expression • assignment_operator assignment_expression\l 81 multiplicative_expression: primary_expression •\l"]
  40 -> 63 [style=solid label="MUL_ASSIGN"]
  40 -> 64 [style=solid label="DIV_ASSIGN"]
  40 -> 65 [style=solid label="MOD_ASSIGN"]
  40 -> 66 [style=solid label="ADD_ASSIGN"]
  40 -> 67 [style=solid label="SUB_ASSIGN"]
  40 -> 68 [style=solid label="SHL_ASSIGN"]
  40 -> 69 [style=solid label="SHR_ASSIGN"]
  40 -> 70 [style=solid label="AND_ASSIGN"]
  40 -> 71 [style=solid label="XOR_ASSIGN"]
  40 -> 72 [style=solid label="OR_ASSIGN"]
  40 -> 73 [style=solid label="ASSIGN"]
  40 -> 74 [style=dashed label="assignment_operator"]
  40 -> "40R81" [style=solid]
 "40R81" [label="R81", fillcolor=3, shape=diamond, style=filled]
  41 [label="State 41\n\l 21 parameter_list: type_specifier • IDENTIFIER\l"]
  41 -> 75 [style=solid label="IDENTIFIER"]
  42 [label="State 42\n\l 19 function_definition: type_specifier IDENTIFIER LPAREN parameter_list • RPAREN statement\l 22 parameter_list: parameter_list • COMA type_specifier IDENTIFIER\l"]
  42 -> 76 [style=solid label="RPAREN"]
  42 -> 77 [style=solid label="COMA"]
  43 [label="State 43\n\l 88 primary_expression: LPAREN expression • RPAREN\l"]
  43 -> 78 [style=solid label="RPAREN"]
  44 [label="State 44\n\l  6 declaration: type_specifier IDENTIFIER ASSIGN expression SEMICOLON •\l"]
  44 -> "44R6" [style=solid]
 "44R6" [label="R6", fillcolor=3, shape=diamond, style=filled]
  45 [label="State 45\n\l 58 logical_or_expression: logical_or_expression LOR • logical_and_expression\l"]
  45 -> 24 [style=solid label="IDENTIFIER"]
  45 -> 25 [style=solid label="CONSTANT"]
  45 -> 26 [style=solid label="STRING_LITERAL"]
  45 -> 27 [style=solid label="LPAREN"]
  45 -> 79 [style=dashed label="logical_and_expression"]
  45 -> 32 [style=dashed label="inclusive_or_expression"]
  45 -> 33 [style=dashed label="exclusive_or_expression"]
  45 -> 34 [style=dashed label="and_expression"]
  45 -> 35 [style=dashed label="equality_expression"]
  45 -> 36 [style=dashed label="relational_expression"]
  45 -> 37 [style=dashed label="shift_expression"]
  45 -> 38 [style=dashed label="additive_expression"]
  45 -> 39 [style=dashed label="multiplicative_expression"]
  45 -> 80 [style=dashed label="primary_expression"]
  46 [label="State 46\n\l 60 logical_and_expression: logical_and_expression LAND • inclusive_or_expression\l"]
  46 -> 24 [style=solid label="IDENTIFIER"]
  46 -> 25 [style=solid label="CONSTANT"]
  46 -> 26 [style=solid label="STRING_LITERAL"]
  46 -> 27 [style=solid label="LPAREN"]
  46 -> 81 [style=dashed label="inclusive_or_expression"]
  46 -> 33 [style=dashed label="exclusive_or_expression"]
  46 -> 34 [style=dashed label="and_expression"]
  46 -> 35 [style=dashed label="equality_expression"]
  46 -> 36 [style=dashed label="relational_expression"]
  46 -> 37 [style=dashed label="shift_expression"]
  46 -> 38 [style=dashed label="additive_expression"]
  46 -> 39 [style=dashed label="multiplicative_expression"]
  46 -> 80 [style=dashed label="primary_expression"]
  47 [label="State 47\n\l 62 inclusive_or_expression: inclusive_or_expression OR • exclusive_or_expression\l"]
  47 -> 24 [style=solid label="IDENTIFIER"]
  47 -> 25 [style=solid label="CONSTANT"]
  47 -> 26 [style=solid label="STRING_LITERAL"]
  47 -> 27 [style=solid label="LPAREN"]
  47 -> 82 [style=dashed label="exclusive_or_expression"]
  47 -> 34 [style=dashed label="and_expression"]
  47 -> 35 [style=dashed label="equality_expression"]
  47 -> 36 [style=dashed label="relational_expression"]
  47 -> 37 [style=dashed label="shift_expression"]
  47 -> 38 [style=dashed label="additive_expression"]
  47 -> 39 [style=dashed label="multiplicative_expression"]
  47 -> 80 [style=dashed label="primary_expression"]
  48 [label="State 48\n\l 64 exclusive_or_expression: exclusive_or_expression XOR • and_expression\l"]
  48 -> 24 [style=solid label="IDENTIFIER"]
  48 -> 25 [style=solid label="CONSTANT"]
  48 -> 26 [style=solid label="STRING_LITERAL"]
  48 -> 27 [style=solid label="LPAREN"]
  48 -> 83 [style=dashed label="and_expression"]
  48 -> 35 [style=dashed label="equality_expression"]
  48 -> 36 [style=dashed label="relational_expression"]
  48 -> 37 [style=dashed label="shift_expression"]
  48 -> 38 [style=dashed label="additive_expression"]
  48 -> 39 [style=dashed label="multiplicative_expression"]
  48 -> 80 [style=dashed label="primary_expression"]
  49 [label="State 49\n\l 66 and_expression: and_expression AND • equality_expression\l"]
  49 -> 24 [style=solid label="IDENTIFIER"]
  49 -> 25 [style=solid label="CONSTANT"]
  49 -> 26 [style=solid label="STRING_LITERAL"]
  49 -> 27 [style=solid label="LPAREN"]
  49 -> 84 [style=dashed label="equality_expression"]
  49 -> 36 [style=dashed label="relational_expression"]
  49 -> 37 [style=dashed label="shift_expression"]
  49 -> 38 [style=dashed label="additive_expression"]
  49 -> 39 [style=dashed label="multiplicative_expression"]
  49 -> 80 [style=dashed label="primary_expression"]
  50 [label="State 50\n\l 69 equality_expression: equality_expression NEQ • relational_expression\l"]
  50 -> 24 [style=solid label="IDENTIFIER"]
  50 -> 25 [style=solid label="CONSTANT"]
  50 -> 26 [style=solid label="STRING_LITERAL"]
  50 -> 27 [style=solid label="LPAREN"]
  50 -> 85 [style=dashed label="relational_expression"]
  50 -> 37 [style=dashed label="shift_expression"]
  50 -> 38 [style=dashed label="additive_expression"]
  50 -> 39 [style=dashed label="multiplicative_expression"]
  50 -> 80 [style=dashed label="primary_expression"]
  51 [label="State 51\n\l 68 equality_expression: equality_expression EQ • relational_expression\l"]
  51 -> 24 [style=solid label="IDENTIFIER"]
  51 -> 25 [style=solid label="CONSTANT"]
  51 -> 26 [style=solid label="STRING_LITERAL"]
  51 -> 27 [style=solid label="LPAREN"]
  51 -> 86 [style=dashed label="relational_expression"]
  51 -> 37 [style=dashed label="shift_expression"]
  51 -> 38 [style=dashed label="additive_expression"]
  51 -> 39 [style=dashed label="multiplicative_expression"]
  51 -> 80 [style=dashed label="primary_expression"]
  52 [label="State 52\n\l 74 relational_expression: relational_expression GEQ • shift_expression\l"]
  52 -> 24 [style=solid label="IDENTIFIER"]
  52 -> 25 [style=solid label="CONSTANT"]
  52 -> 26 [style=solid label="STRING_LITERAL"]
  52 -> 27 [style=solid label="LPAREN"]
  52 -> 87 [style=dashed label="shift_expression"]
  52 -> 38 [style=dashed label="additive_expression"]
  52 -> 39 [style=dashed label="multiplicative_expression"]
  52 -> 80 [style=dashed label="primary_expression"]
  53 [label="State 53\n\l 73 relational_expression: relational_expression LEQ • shift_expression\l"]
  53 -> 24 [style=solid label="IDENTIFIER"]
  53 -> 25 [style=solid label="CONSTANT"]
  53 -> 26 [style=solid label="STRING_LITERAL"]
  53 -> 27 [style=solid label="LPAREN"]
  53 -> 88 [style=dashed label="shift_expression"]
  53 -> 38 [style=dashed label="additive_expression"]
  53 -> 39 [style=dashed label="multiplicative_expression"]
  53 -> 80 [style=dashed label="primary_expression"]
  54 [label="State 54\n\l 71 relational_expression: relational_expression LESS • shift_expression\l"]
  54 -> 24 [style=solid label="IDENTIFIER"]
  54 -> 25 [style=solid label="CONSTANT"]
  54 -> 26 [style=solid label="STRING_LITERAL"]
  54 -> 27 [style=solid label="LPAREN"]
  54 -> 89 [style=dashed label="shift_expression"]
  54 -> 38 [style=dashed label="additive_expression"]
  54 -> 39 [style=dashed label="multiplicative_expression"]
  54 -> 80 [style=dashed label="primary_expression"]
  55 [label="State 55\n\l 72 relational_expression: relational_expression GREATER • shift_expression\l"]
  55 -> 24 [style=solid label="IDENTIFIER"]
  55 -> 25 [style=solid label="CONSTANT"]
  55 -> 26 [style=solid label="STRING_LITERAL"]
  55 -> 27 [style=solid label="LPAREN"]
  55 -> 90 [style=dashed label="shift_expression"]
  55 -> 38 [style=dashed label="additive_expression"]
  55 -> 39 [style=dashed label="multiplicative_expression"]
  55 -> 80 [style=dashed label="primary_expression"]
  56 [label="State 56\n\l 76 shift_expression: shift_expression SHL • additive_expression\l"]
  56 -> 24 [style=solid label="IDENTIFIER"]
  56 -> 25 [style=solid label="CONSTANT"]
  56 -> 26 [style=solid label="STRING_LITERAL"]
  56 -> 27 [style=solid label="LPAREN"]
  56 -> 91 [style=dashed label="additive_expression"]
  56 -> 39 [style=dashed label="multiplicative_expression"]
  56 -> 80 [style=dashed label="primary_expression"]
  57 [label="State 57\n\l 77 shift_expression: shift_expression SHR • additive_expression\l"]
  57 -> 24 [style=solid label="IDENTIFIER"]
  57 -> 25 [style=solid label="CONSTANT"]
  57 -> 26 [style=solid label="STRING_LITERAL"]
  57 -> 27 [style=solid label="LPAREN"]
  57 -> 92 [style=dashed label="additive_expression"]
  57 -> 39 [style=dashed label="multiplicative_expression"]
  57 -> 80 [style=dashed label="primary_expression"]
  58 [label="State 58\n\l 79 additive_expression: additive_expression ADD • multiplicative_expression\l"]
  58 -> 24 [style=solid label="IDENTIFIER"]
  58 -> 25 [style=solid label="CONSTANT"]
  58 -> 26 [style=solid label="STRING_LITERAL"]
  58 -> 27 [style=solid label="LPAREN"]
  58 -> 93 [style=dashed label="multiplicative_expression"]
  58 -> 80 [style=dashed label="primary_expression"]
  59 [label="State 59\n\l 80 additive_expression: additive_expression SUB • multiplicative_expression\l"]
  59 -> 24 [style=solid label="IDENTIFIER"]
  59 -> 25 [style=solid label="CONSTANT"]
  59 -> 26 [style=solid label="STRING_LITERAL"]
  59 -> 27 [style=solid label="LPAREN"]
  59 -> 94 [style=dashed label="multiplicative_expression"]
  59 -> 80 [style=dashed label="primary_expression"]
  60 [label="State 60\n\l 82 multiplicative_expression: multiplicative_expression MUL • primary_expression\l"]
  60 -> 24 [style=solid label="IDENTIFIER"]
  60 -> 25 [style=solid label="CONSTANT"]
  60 -> 26 [style=solid label="STRING_LITERAL"]
  60 -> 27 [style=solid label="LPAREN"]
  60 -> 95 [style=dashed label="primary_expression"]
  61 [label="State 61\n\l 83 multiplicative_expression: multiplicative_expression DIV • primary_expression\l"]
  61 -> 24 [style=solid label="IDENTIFIER"]
  61 -> 25 [style=solid label="CONSTANT"]
  61 -> 26 [style=solid label="STRING_LITERAL"]
  61 -> 27 [style=solid label="LPAREN"]
  61 -> 96 [style=dashed label="primary_expression"]
  62 [label="State 62\n\l 84 multiplicative_expression: multiplicative_expression MOD • primary_expression\l"]
  62 -> 24 [style=solid label="IDENTIFIER"]
  62 -> 25 [style=solid label="CONSTANT"]
  62 -> 26 [style=solid label="STRING_LITERAL"]
  62 -> 27 [style=solid label="LPAREN"]
  62 -> 97 [style=dashed label="primary_expression"]
  63 [label="State 63\n\l 47 assignment_operator: MUL_ASSIGN •\l"]
  63 -> "63R47" [style=solid]
 "63R47" [label="R47", fillcolor=3, shape=diamond, style=filled]
  64 [label="State 64\n\l 48 assignment_operator: DIV_ASSIGN •\l"]
  64 -> "64R48" [style=solid]
 "64R48" [label="R48", fillcolor=3, shape=diamond, style=filled]
  65 [label="State 65\n\l 49 assignment_operator: MOD_ASSIGN •\l"]
  65 -> "65R49" [style=solid]
 "65R49" [label="R49", fillcolor=3, shape=diamond, style=filled]
  66 [label="State 66\n\l 50 assignment_operator: ADD_ASSIGN •\l"]
  66 -> "66R50" [style=solid]
 "66R50" [label="R50", fillcolor=3, shape=diamond, style=filled]
  67 [label="State 67\n\l 51 assignment_operator: SUB_ASSIGN •\l"]
  67 -> "67R51" [style=solid]
 "67R51" [label="R51", fillcolor=3, shape=diamond, style=filled]
  68 [label="State 68\n\l 52 assignment_operator: SHL_ASSIGN •\l"]
  68 -> "68R52" [style=solid]
 "68R52" [label="R52", fillcolor=3, shape=diamond, style=filled]
  69 [label="State 69\n\l 53 assignment_operator: SHR_ASSIGN •\l"]
  69 -> "69R53" [style=solid]
 "69R53" [label="R53", fillcolor=3, shape=diamond, style=filled]
  70 [label="State 70\n\l 54 assignment_operator: AND_ASSIGN •\l"]
  70 -> "70R54" [style=solid]
 "70R54" [label="R54", fillcolor=3, shape=diamond, style=filled]
  71 [label="State 71\n\l 55 assignment_operator: XOR_ASSIGN •\l"]
  71 -> "71R55" [style=solid]
 "71R55" [label="R55", fillcolor=3, shape=diamond, style=filled]
  72 [label="State 72\n\l 56 assignment_operator: OR_ASSIGN •\l"]
  72 -> "72R56" [style=solid]
 "72R56" [label="R56", fillcolor=3, shape=diamond, style=filled]
  73 [label="State 73\n\l 46 assignment_operator: ASSIGN •\l"]
  73 -> "73R46" [style=solid]
 "73R46" [label="R46", fillcolor=3, shape=diamond, style=filled]
  74 [label="State 74\n\l 45 assignment_expression: primary_expression assignment_operator • assignment_expression\l"]
  74 -> 24 [style=solid label="IDENTIFIER"]
  74 -> 25 [style=solid label="CONSTANT"]
  74 -> 26 [style=solid label="STRING_LITERAL"]
  74 -> 27 [style=solid label="LPAREN"]
  74 -> 98 [style=dashed label="assignment_expression"]
  74 -> 30 [style=dashed label="logical_or_expression"]
  74 -> 31 [style=dashed label="logical_and_expression"]
  74 -> 32 [style=dashed label="inclusive_or_expression"]
  74 -> 33 [style=dashed label="exclusive_or_expression"]
  74 -> 34 [style=dashed label="and_expression"]
  74 -> 35 [style=dashed label="equality_expression"]
  74 -> 36 [style=dashed label="relational_expression"]
  74 -> 37 [style=dashed label="shift_expression"]
  74 -> 38 [style=dashed label="additive_expression"]
  74 -> 39 [style=dashed label="multiplicative_expression"]
  74 -> 40 [style=dashed label="primary_expression"]
  75 [label="State 75\n\l 21 parameter_list: type_specifier IDENTIFIER •\l"]
  75 -> "75R21" [style=solid]
 "75R21" [label="R21", fillcolor=3, shape=diamond, style=filled]
  76 [label="State 76\n\l 19 function_definition: type_specifier IDENTIFIER LPAREN parameter_list RPAREN • statement\l"]
  76 -> 99 [style=solid label="RETURN_KW"]
  76 -> 100 [style=solid label="IF_KW"]
  76 -> 101 [style=solid label="CONTINUE_KW"]
  76 -> 102 [style=solid label="BREAK_KW"]
  76 -> 103 [style=solid label="WHILE_KW"]
  76 -> 24 [style=solid label="IDENTIFIER"]
  76 -> 25 [style=solid label="CONSTANT"]
  76 -> 26 [style=solid label="STRING_LITERAL"]
  76 -> 104 [style=solid label="SEMICOLON"]
  76 -> 27 [style=solid label="LPAREN"]
  76 -> 105 [style=solid label="LBRACKET"]
  76 -> 106 [style=dashed label="compound_statement"]
  76 -> 107 [style=dashed label="statement"]
  76 -> 108 [style=dashed label="selection_statement"]
  76 -> 109 [style=dashed label="iteration_statement"]
  76 -> 110 [style=dashed label="jump_statement"]
  76 -> 111 [style=dashed label="expression_statement"]
  76 -> 112 [style=dashed label="expression"]
  76 -> 29 [style=dashed label="assignment_expression"]
  76 -> 30 [style=dashed label="logical_or_expression"]
  76 -> 31 [style=dashed label="logical_and_expression"]
  76 -> 32 [style=dashed label="inclusive_or_expression"]
  76 -> 33 [style=dashed label="exclusive_or_expression"]
  76 -> 34 [style=dashed label="and_expression"]
  76 -> 35 [style=dashed label="equality_expression"]
  76 -> 36 [style=dashed label="relational_expression"]
  76 -> 37 [style=dashed label="shift_expression"]
  76 -> 38 [style=dashed label="additive_expression"]
  76 -> 39 [style=dashed label="multiplicative_expression"]
  76 -> 40 [style=dashed label="primary_expression"]
  77 [label="State 77\n\l 22 parameter_list: parameter_list COMA • type_specifier IDENTIFIER\l"]
  77 -> 1 [style=solid label="BOOL_T"]
  77 -> 2 [style=solid label="CHAR_T"]
  77 -> 3 [style=solid label="FLOAT_32_T"]
  77 -> 4 [style=solid label="FLOAT_64_T"]
  77 -> 5 [style=solid label="INT_8_T"]
  77 -> 6 [style=solid label="UINT_8_T"]
  77 -> 7 [style=solid label="INT_16_T"]
  77 -> 8 [style=solid label="UINT_16_T"]
  77 -> 9 [style=solid label="INT_32_T"]
  77 -> 10 [style=solid label="UINT_32_T"]
  77 -> 11 [style=solid label="INT_64_T"]
  77 -> 12 [style=solid label="UINT_64_T"]
  77 -> 113 [style=dashed label="type_specifier"]
  78 [label="State 78\n\l 88 primary_expression: LPAREN expression RPAREN •\l"]
  78 -> "78R88" [style=solid]
 "78R88" [label="R88", fillcolor=3, shape=diamond, style=filled]
  79 [label="State 79\n\l 58 logical_or_expression: logical_or_expression LOR logical_and_expression •\l 60 logical_and_expression: logical_and_expression • LAND inclusive_or_expression\l"]
  79 -> 46 [style=solid label="LAND"]
  79 -> "79R58" [style=solid]
 "79R58" [label="R58", fillcolor=3, shape=diamond, style=filled]
  80 [label="State 80\n\l 81 multiplicative_expression: primary_expression •\l"]
  80 -> "80R81" [style=solid]
 "80R81" [label="R81", fillcolor=3, shape=diamond, style=filled]
  81 [label="State 81\n\l 60 logical_and_expression: logical_and_expression LAND inclusive_or_expression •\l 62 inclusive_or_expression: inclusive_or_expression • OR exclusive_or_expression\l"]
  81 -> 47 [style=solid label="OR"]
  81 -> "81R60" [style=solid]
 "81R60" [label="R60", fillcolor=3, shape=diamond, style=filled]
  82 [label="State 82\n\l 62 inclusive_or_expression: inclusive_or_expression OR exclusive_or_expression •\l 64 exclusive_or_expression: exclusive_or_expression • XOR and_expression\l"]
  82 -> 48 [style=solid label="XOR"]
  82 -> "82R62" [style=solid]
 "82R62" [label="R62", fillcolor=3, shape=diamond, style=filled]
  83 [label="State 83\n\l 64 exclusive_or_expression: exclusive_or_expression XOR and_expression •\l 66 and_expression: and_expression • AND equality_expression\l"]
  83 -> 49 [style=solid label="AND"]
  83 -> "83R64" [style=solid]
 "83R64" [label="R64", fillcolor=3, shape=diamond, style=filled]
  84 [label="State 84\n\l 66 and_expression: and_expression AND equality_expression •\l 68 equality_expression: equality_expression • EQ relational_expression\l 69                    | equality_expression • NEQ relational_expression\l"]
  84 -> 50 [style=solid label="NEQ"]
  84 -> 51 [style=solid label="EQ"]
  84 -> "84R66" [style=solid]
 "84R66" [label="R66", fillcolor=3, shape=diamond, style=filled]
  85 [label="State 85\n\l 69 equality_expression: equality_expression NEQ relational_expression •\l 71 relational_expression: relational_expression • LESS shift_expression\l 72                      | relational_expression • GREATER shift_expression\l 73                      | relational_expression • LEQ shift_expression\l 74                      | relational_expression • GEQ shift_expression\l"]
  85 -> 52 [style=solid label="GEQ"]
  85 -> 53 [style=solid label="LEQ"]
  85 -> 54 [style=solid label="LESS"]
  85 -> 55 [style=solid label="GREATER"]
  85 -> "85R69" [style=solid]
 "85R69" [label="R69", fillcolor=3, shape=diamond, style=filled]
  86 [label="State 86\n\l 68 equality_expression: equality_expression EQ relational_expression •\l 71 relational_expression: relational_expression • LESS shift_expression\l 72                      | relational_expression • GREATER shift_expression\l 73                      | relational_expression • LEQ shift_expression\l 74                      | relational_expression • GEQ shift_expression\l"]
  86 -> 52 [style=solid label="GEQ"]
  86 -> 53 [style=solid label="LEQ"]
  86 -> 54 [style=solid label="LESS"]
  86 -> 55 [style=solid label="GREATER"]
  86 -> "86R68" [style=solid]
 "86R68" [label="R68", fillcolor=3, shape=diamond, style=filled]
  87 [label="State 87\n\l 74 relational_expression: relational_expression GEQ shift_expression •\l 76 shift_expression: shift_expression • SHL additive_expression\l 77                 | shift_expression • SHR additive_expression\l"]
  87 -> 56 [style=solid label="SHL"]
  87 -> 57 [style=solid label="SHR"]
  87 -> "87R74" [style=solid]
 "87R74" [label="R74", fillcolor=3, shape=diamond, style=filled]
  88 [label="State 88\n\l 73 relational_expression: relational_expression LEQ shift_expression •\l 76 shift_expression: shift_expression • SHL additive_expression\l 77                 | shift_expression • SHR additive_expression\l"]
  88 -> 56 [style=solid label="SHL"]
  88 -> 57 [style=solid label="SHR"]
  88 -> "88R73" [style=solid]
 "88R73" [label="R73", fillcolor=3, shape=diamond, style=filled]
  89 [label="State 89\n\l 71 relational_expression: relational_expression LESS shift_expression •\l 76 shift_expression: shift_expression • SHL additive_expression\l 77                 | shift_expression • SHR additive_expression\l"]
  89 -> 56 [style=solid label="SHL"]
  89 -> 57 [style=solid label="SHR"]
  89 -> "89R71" [style=solid]
 "89R71" [label="R71", fillcolor=3, shape=diamond, style=filled]
  90 [label="State 90\n\l 72 relational_expression: relational_expression GREATER shift_expression •\l 76 shift_expression: shift_expression • SHL additive_expression\l 77                 | shift_expression • SHR additive_expression\l"]
  90 -> 56 [style=solid label="SHL"]
  90 -> 57 [style=solid label="SHR"]
  90 -> "90R72" [style=solid]
 "90R72" [label="R72", fillcolor=3, shape=diamond, style=filled]
  91 [label="State 91\n\l 76 shift_expression: shift_expression SHL additive_expression •\l 79 additive_expression: additive_expression • ADD multiplicative_expression\l 80                    | additive_expression • SUB multiplicative_expression\l"]
  91 -> 58 [style=solid label="ADD"]
  91 -> 59 [style=solid label="SUB"]
  91 -> "91R76" [style=solid]
 "91R76" [label="R76", fillcolor=3, shape=diamond, style=filled]
  92 [label="State 92\n\l 77 shift_expression: shift_expression SHR additive_expression •\l 79 additive_expression: additive_expression • ADD multiplicative_expression\l 80                    | additive_expression • SUB multiplicative_expression\l"]
  92 -> 58 [style=solid label="ADD"]
  92 -> 59 [style=solid label="SUB"]
  92 -> "92R77" [style=solid]
 "92R77" [label="R77", fillcolor=3, shape=diamond, style=filled]
  93 [label="State 93\n\l 79 additive_expression: additive_expression ADD multiplicative_expression •\l 82 multiplicative_expression: multiplicative_expression • MUL primary_expression\l 83                          | multiplicative_expression • DIV primary_expression\l 84                          | multiplicative_expression • MOD primary_expression\l"]
  93 -> 60 [style=solid label="MUL"]
  93 -> 61 [style=solid label="DIV"]
  93 -> 62 [style=solid label="MOD"]
  93 -> "93R79" [style=solid]
 "93R79" [label="R79", fillcolor=3, shape=diamond, style=filled]
  94 [label="State 94\n\l 80 additive_expression: additive_expression SUB multiplicative_expression •\l 82 multiplicative_expression: multiplicative_expression • MUL primary_expression\l 83                          | multiplicative_expression • DIV primary_expression\l 84                          | multiplicative_expression • MOD primary_expression\l"]
  94 -> 60 [style=solid label="MUL"]
  94 -> 61 [style=solid label="DIV"]
  94 -> 62 [style=solid label="MOD"]
  94 -> "94R80" [style=solid]
 "94R80" [label="R80", fillcolor=3, shape=diamond, style=filled]
  95 [label="State 95\n\l 82 multiplicative_expression: multiplicative_expression MUL primary_expression •\l"]
  95 -> "95R82" [style=solid]
 "95R82" [label="R82", fillcolor=3, shape=diamond, style=filled]
  96 [label="State 96\n\l 83 multiplicative_expression: multiplicative_expression DIV primary_expression •\l"]
  96 -> "96R83" [style=solid]
 "96R83" [label="R83", fillcolor=3, shape=diamond, style=filled]
  97 [label="State 97\n\l 84 multiplicative_expression: multiplicative_expression MOD primary_expression •\l"]
  97 -> "97R84" [style=solid]
 "97R84" [label="R84", fillcolor=3, shape=diamond, style=filled]
  98 [label="State 98\n\l 45 assignment_expression: primary_expression assignment_operator assignment_expression •\l"]
  98 -> "98R45" [style=solid]
 "98R45" [label="R45", fillcolor=3, shape=diamond, style=filled]
  99 [label="State 99\n\l 39 jump_statement: RETURN_KW • SEMICOLON\l 40               | RETURN_KW • expression SEMICOLON\l"]
  99 -> 24 [style=solid label="IDENTIFIER"]
  99 -> 25 [style=solid label="CONSTANT"]
  99 -> 26 [style=solid label="STRING_LITERAL"]
  99 -> 114 [style=solid label="SEMICOLON"]
  99 -> 27 [style=solid label="LPAREN"]
  99 -> 115 [style=dashed label="expression"]
  99 -> 29 [style=dashed label="assignment_expression"]
  99 -> 30 [style=dashed label="logical_or_expression"]
  99 -> 31 [style=dashed label="logical_and_expression"]
  99 -> 32 [style=dashed label="inclusive_or_expression"]
  99 -> 33 [style=dashed label="exclusive_or_expression"]
  99 -> 34 [style=dashed label="and_expression"]
  99 -> 35 [style=dashed label="equality_expression"]
  99 -> 36 [style=dashed label="relational_expression"]
  99 -> 37 [style=dashed label="shift_expression"]
  99 -> 38 [style=dashed label="additive_expression"]
  99 -> 39 [style=dashed label="multiplicative_expression"]
  99 -> 40 [style=dashed label="primary_expression"]
  100 [label="State 100\n\l 34 selection_statement: IF_KW • LPAREN expression RPAREN statement\l 35                    | IF_KW • LPAREN expression RPAREN statement ELSE_KW statement\l"]
  100 -> 116 [style=solid label="LPAREN"]
  101 [label="State 101\n\l 37 jump_statement: CONTINUE_KW • SEMICOLON\l"]
  101 -> 117 [style=solid label="SEMICOLON"]
  102 [label="State 102\n\l 38 jump_statement: BREAK_KW • SEMICOLON\l"]
  102 -> 118 [style=solid label="SEMICOLON"]
  103 [label="State 103\n\l 36 iteration_statement: WHILE_KW • LPAREN expression RPAREN statement\l"]
  103 -> 119 [style=solid label="LPAREN"]
  104 [label="State 104\n\l 41 expression_statement: SEMICOLON •\l"]
  104 -> "104R41" [style=solid]
 "104R41" [label="R41", fillcolor=3, shape=diamond, style=filled]
  105 [label="State 105\n\l 23 compound_statement: LBRACKET • RBRACKET\l 24                   | LBRACKET • block_item_list RBRACKET\l"]
  105 -> 99 [style=solid label="RETURN_KW"]
  105 -> 100 [style=solid label="IF_KW"]
  105 -> 101 [style=solid label="CONTINUE_KW"]
  105 -> 102 [style=solid label="BREAK_KW"]
  105 -> 103 [style=solid label="WHILE_KW"]
  105 -> 24 [style=solid label="IDENTIFIER"]
  105 -> 25 [style=solid label="CONSTANT"]
  105 -> 26 [style=solid label="STRING_LITERAL"]
  105 -> 1 [style=solid label="BOOL_T"]
  105 -> 2 [style=solid label="CHAR_T"]
  105 -> 3 [style=solid label="FLOAT_32_T"]
  105 -> 4 [style=solid label="FLOAT_64_T"]
  105 -> 5 [style=solid label="INT_8_T"]
  105 -> 6 [style=solid label="UINT_8_T"]
  105 -> 7 [style=solid label="INT_16_T"]
  105 -> 8 [style=solid label="UINT_16_T"]
  105 -> 9 [style=solid label="INT_32_T"]
  105 -> 10 [style=solid label="UINT_32_T"]
  105 -> 11 [style=solid label="INT_64_T"]
  105 -> 12 [style=solid label="UINT_64_T"]
  105 -> 104 [style=solid label="SEMICOLON"]
  105 -> 27 [style=solid label="LPAREN"]
  105 -> 105 [style=solid label="LBRACKET"]
  105 -> 120 [style=solid label="RBRACKET"]
  105 -> 121 [style=dashed label="declaration"]
  105 -> 122 [style=dashed label="type_specifier"]
  105 -> 106 [style=dashed label="compound_statement"]
  105 -> 123 [style=dashed label="block_item_list"]
  105 -> 124 [style=dashed label="block_item"]
  105 -> 125 [style=dashed label="statement"]
  105 -> 108 [style=dashed label="selection_statement"]
  105 -> 109 [style=dashed label="iteration_statement"]
  105 -> 110 [style=dashed label="jump_statement"]
  105 -> 111 [style=dashed label="expression_statement"]
  105 -> 112 [style=dashed label="expression"]
  105 -> 29 [style=dashed label="assignment_expression"]
  105 -> 30 [style=dashed label="logical_or_expression"]
  105 -> 31 [style=dashed label="logical_and_expression"]
  105 -> 32 [style=dashed label="inclusive_or_expression"]
  105 -> 33 [style=dashed label="exclusive_or_expression"]
  105 -> 34 [style=dashed label="and_expression"]
  105 -> 35 [style=dashed label="equality_expression"]
  105 -> 36 [style=dashed label="relational_expression"]
  105 -> 37 [style=dashed label="shift_expression"]
  105 -> 38 [style=dashed label="additive_expression"]
  105 -> 39 [style=dashed label="multiplicative_expression"]
  105 -> 40 [style=dashed label="primary_expression"]
  106 [label="State 106\n\l 29 statement: compound_statement •\l"]
  106 -> "106R29" [style=solid]
 "106R29" [label="R29", fillcolor=3, shape=diamond, style=filled]
  107 [label="State 107\n\l 19 function_definition: type_specifier IDENTIFIER LPAREN parameter_list RPAREN statement •\l"]
  107 -> "107R19" [style=solid]
 "107R19" [label="R19", fillcolor=3, shape=diamond, style=filled]
  108 [label="State 108\n\l 30 statement: selection_statement •\l"]
  108 -> "108R30" [style=solid]
 "108R30" [label="R30", fillcolor=3, shape=diamond, style=filled]
  109 [label="State 109\n\l 31 statement: iteration_statement •\l"]
  109 -> "109R31" [style=solid]
 "109R31" [label="R31", fillcolor=3, shape=diamond, style=filled]
  110 [label="State 110\n\l 33 statement: jump_statement •\l"]
  110 -> "110R33" [style=solid]
 "110R33" [label="R33", fillcolor=3, shape=diamond, style=filled]
  111 [label="State 111\n\l 32 statement: expression_statement •\l"]
  111 -> "111R32" [style=solid]
 "111R32" [label="R32", fillcolor=3, shape=diamond, style=filled]
  112 [label="State 112\n\l 42 expression_statement: expression • SEMICOLON\l"]
  112 -> 126 [style=solid label="SEMICOLON"]
  113 [label="State 113\n\l 22 parameter_list: parameter_list COMA type_specifier • IDENTIFIER\l"]
  113 -> 127 [style=solid label="IDENTIFIER"]
  114 [label="State 114\n\l 39 jump_statement: RETURN_KW SEMICOLON •\l"]
  114 -> "114R39" [style=solid]
 "114R39" [label="R39", fillcolor=3, shape=diamond, style=filled]
  115 [label="State 115\n\l 40 jump_statement: RETURN_KW expression • SEMICOLON\l"]
  115 -> 128 [style=solid label="SEMICOLON"]
  116 [label="State 116\n\l 34 selection_statement: IF_KW LPAREN • expression RPAREN statement\l 35                    | IF_KW LPAREN • expression RPAREN statement ELSE_KW statement\l"]
  116 -> 24 [style=solid label="IDENTIFIER"]
  116 -> 25 [style=solid label="CONSTANT"]
  116 -> 26 [style=solid label="STRING_LITERAL"]
  116 -> 27 [style=solid label="LPAREN"]
  116 -> 129 [style=dashed label="expression"]
  116 -> 29 [style=dashed label="assignment_expression"]
  116 -> 30 [style=dashed label="logical_or_expression"]
  116 -> 31 [style=dashed label="logical_and_expression"]
  116 -> 32 [style=dashed label="inclusive_or_expression"]
  116 -> 33 [style=dashed label="exclusive_or_expression"]
  116 -> 34 [style=dashed label="and_expression"]
  116 -> 35 [style=dashed label="equality_expression"]
  116 -> 36 [style=dashed label="relational_expression"]
  116 -> 37 [style=dashed label="shift_expression"]
  116 -> 38 [style=dashed label="additive_expression"]
  116 -> 39 [style=dashed label="multiplicative_expression"]
  116 -> 40 [style=dashed label="primary_expression"]
  117 [label="State 117\n\l 37 jump_statement: CONTINUE_KW SEMICOLON •\l"]
  117 -> "117R37" [style=solid]
 "117R37" [label="R37", fillcolor=3, shape=diamond, style=filled]
  118 [label="State 118\n\l 38 jump_statement: BREAK_KW SEMICOLON •\l"]
  118 -> "118R38" [style=solid]
 "118R38" [label="R38", fillcolor=3, shape=diamond, style=filled]
  119 [label="State 119\n\l 36 iteration_statement: WHILE_KW LPAREN • expression RPAREN statement\l"]
  119 -> 24 [style=solid label="IDENTIFIER"]
  119 -> 25 [style=solid label="CONSTANT"]
  119 -> 26 [style=solid label="STRING_LITERAL"]
  119 -> 27 [style=solid label="LPAREN"]
  119 -> 130 [style=dashed label="expression"]
  119 -> 29 [style=dashed label="assignment_expression"]
  119 -> 30 [style=dashed label="logical_or_expression"]
  119 -> 31 [style=dashed label="logical_and_expression"]
  119 -> 32 [style=dashed label="inclusive_or_expression"]
  119 -> 33 [style=dashed label="exclusive_or_expression"]
  119 -> 34 [style=dashed label="and_expression"]
  119 -> 35 [style=dashed label="equality_expression"]
  119 -> 36 [style=dashed label="relational_expression"]
  119 -> 37 [style=dashed label="shift_expression"]
  119 -> 38 [style=dashed label="additive_expression"]
  119 -> 39 [style=dashed label="multiplicative_expression"]
  119 -> 40 [style=dashed label="primary_expression"]
  120 [label="State 120\n\l 23 compound_statement: LBRACKET RBRACKET •\l"]
  120 -> "120R23" [style=solid]
 "120R23" [label="R23", fillcolor=3, shape=diamond, style=filled]
  121 [label="State 121\n\l 27 block_item: declaration •\l"]
  121 -> "121R27" [style=solid]
 "121R27" [label="R27", fillcolor=3, shape=diamond, style=filled]
  122 [label="State 122\n\l  5 declaration: type_specifier • IDENTIFIER SEMICOLON\l  6            | type_specifier • IDENTIFIER ASSIGN expression SEMICOLON\l"]
  122 -> 131 [style=solid label="IDENTIFIER"]
  123 [label="State 123\n\l 24 compound_statement: LBRACKET block_item_list • RBRACKET\l 26 block_item_list: block_item_list • block_item\l"]
  123 -> 99 [style=solid label="RETURN_KW"]
  123 -> 100 [style=solid label="IF_KW"]
  123 -> 101 [style=solid label="CONTINUE_KW"]
  123 -> 102 [style=solid label="BREAK_KW"]
  123 -> 103 [style=solid label="WHILE_KW"]
  123 -> 24 [style=solid label="IDENTIFIER"]
  123 -> 25 [style=solid label="CONSTANT"]
  123 -> 26 [style=solid label="STRING_LITERAL"]
  123 -> 1 [style=solid label="BOOL_T"]
  123 -> 2 [style=solid label="CHAR_T"]
  123 -> 3 [style=solid label="FLOAT_32_T"]
  123 -> 4 [style=solid label="FLOAT_64_T"]
  123 -> 5 [style=solid label="INT_8_T"]
  123 -> 6 [style=solid label="UINT_8_T"]
  123 -> 7 [style=solid label="INT_16_T"]
  123 -> 8 [style=solid label="UINT_16_T"]
  123 -> 9 [style=solid label="INT_32_T"]
  123 -> 10 [style=solid label="UINT_32_T"]
  123 -> 11 [style=solid label="INT_64_T"]
  123 -> 12 [style=solid label="UINT_64_T"]
  123 -> 104 [style=solid label="SEMICOLON"]
  123 -> 27 [style=solid label="LPAREN"]
  123 -> 105 [style=solid label="LBRACKET"]
  123 -> 132 [style=solid label="RBRACKET"]
  123 -> 121 [style=dashed label="declaration"]
  123 -> 122 [style=dashed label="type_specifier"]
  123 -> 106 [style=dashed label="compound_statement"]
  123 -> 133 [style=dashed label="block_item"]
  123 -> 125 [style=dashed label="statement"]
  123 -> 108 [style=dashed label="selection_statement"]
  123 -> 109 [style=dashed label="iteration_statement"]
  123 -> 110 [style=dashed label="jump_statement"]
  123 -> 111 [style=dashed label="expression_statement"]
  123 -> 112 [style=dashed label="expression"]
  123 -> 29 [style=dashed label="assignment_expression"]
  123 -> 30 [style=dashed label="logical_or_expression"]
  123 -> 31 [style=dashed label="logical_and_expression"]
  123 -> 32 [style=dashed label="inclusive_or_expression"]
  123 -> 33 [style=dashed label="exclusive_or_expression"]
  123 -> 34 [style=dashed label="and_expression"]
  123 -> 35 [style=dashed label="equality_expression"]
  123 -> 36 [style=dashed label="relational_expression"]
  123 -> 37 [style=dashed label="shift_expression"]
  123 -> 38 [style=dashed label="additive_expression"]
  123 -> 39 [style=dashed label="multiplicative_expression"]
  123 -> 40 [style=dashed label="primary_expression"]
  124 [label="State 124\n\l 25 block_item_list: block_item •\l"]
  124 -> "124R25" [style=solid]
 "124R25" [label="R25", fillcolor=3, shape=diamond, style=filled]
  125 [label="State 125\n\l 28 block_item: statement •\l"]
  125 -> "125R28" [style=solid]
 "125R28" [label="R28", fillcolor=3, shape=diamond, style=filled]
  126 [label="State 126\n\l 42 expression_statement: expression SEMICOLON •\l"]
  126 -> "126R42" [style=solid]
 "126R42" [label="R42", fillcolor=3, shape=diamond, style=filled]
  127 [label="State 127\n\l 22 parameter_list: parameter_list COMA type_specifier IDENTIFIER •\l"]
  127 -> "127R22" [style=solid]
 "127R22" [label="R22", fillcolor=3, shape=diamond, style=filled]
  128 [label="State 128\n\l 40 jump_statement: RETURN_KW expression SEMICOLON •\l"]
  128 -> "128R40" [style=solid]
 "128R40" [label="R40", fillcolor=3, shape=diamond, style=filled]
  129 [label="State 129\n\l 34 selection_statement: IF_KW LPAREN expression • RPAREN statement\l 35                    | IF_KW LPAREN expression • RPAREN statement ELSE_KW statement\l"]
  129 -> 134 [style=solid label="RPAREN"]
  130 [label="State 130\n\l 36 iteration_statement: WHILE_KW LPAREN expression • RPAREN statement\l"]
  130 -> 135 [style=solid label="RPAREN"]
  131 [label="State 131\n\l  5 declaration: type_specifier IDENTIFIER • SEMICOLON\l  6            | type_specifier IDENTIFIER • ASSIGN expression SEMICOLON\l"]
  131 -> 21 [style=solid label="SEMICOLON"]
  131 -> 22 [style=solid label="ASSIGN"]
  132 [label="State 132\n\l 24 compound_statement: LBRACKET block_item_list RBRACKET •\l"]
  132 -> "132R24" [style=solid]
 "132R24" [label="R24", fillcolor=3, shape=diamond, style=filled]
  133 [label="State 133\n\l 26 block_item_list: block_item_list block_item •\l"]
  133 -> "133R26" [style=solid]
 "133R26" [label="R26", fillcolor=3, shape=diamond, style=filled]
  134 [label="State 134\n\l 34 selection_statement: IF_KW LPAREN expression RPAREN • statement\l 35                    | IF_KW LPAREN expression RPAREN • statement ELSE_KW statement\l"]
  134 -> 99 [style=solid label="RETURN_KW"]
  134 -> 100 [style=solid label="IF_KW"]
  134 -> 101 [style=solid label="CONTINUE_KW"]
  134 -> 102 [style=solid label="BREAK_KW"]
  134 -> 103 [style=solid label="WHILE_KW"]
  134 -> 24 [style=solid label="IDENTIFIER"]
  134 -> 25 [style=solid label="CONSTANT"]
  134 -> 26 [style=solid label="STRING_LITERAL"]
  134 -> 104 [style=solid label="SEMICOLON"]
  134 -> 27 [style=solid label="LPAREN"]
  134 -> 105 [style=solid label="LBRACKET"]
  134 -> 106 [style=dashed label="compound_statement"]
  134 -> 136 [style=dashed label="statement"]
  134 -> 108 [style=dashed label="selection_statement"]
  134 -> 109 [style=dashed label="iteration_statement"]
  134 -> 110 [style=dashed label="jump_statement"]
  134 -> 111 [style=dashed label="expression_statement"]
  134 -> 112 [style=dashed label="expression"]
  134 -> 29 [style=dashed label="assignment_expression"]
  134 -> 30 [style=dashed label="logical_or_expression"]
  134 -> 31 [style=dashed label="logical_and_expression"]
  134 -> 32 [style=dashed label="inclusive_or_expression"]
  134 -> 33 [style=dashed label="exclusive_or_expression"]
  134 -> 34 [style=dashed label="and_expression"]
  134 -> 35 [style=dashed label="equality_expression"]
  134 -> 36 [style=dashed label="relational_expression"]
  134 -> 37 [style=dashed label="shift_expression"]
  134 -> 38 [style=dashed label="additive_expression"]
  134 -> 39 [style=dashed label="multiplicative_expression"]
  134 -> 40 [style=dashed label="primary_expression"]
  135 [label="State 135\n\l 36 iteration_statement: WHILE_KW LPAREN expression RPAREN • statement\l"]
  135 -> 99 [style=solid label="RETURN_KW"]
  135 -> 100 [style=solid label="IF_KW"]
  135 -> 101 [style=solid label="CONTINUE_KW"]
  135 -> 102 [style=solid label="BREAK_KW"]
  135 -> 103 [style=solid label="WHILE_KW"]
  135 -> 24 [style=solid label="IDENTIFIER"]
  135 -> 25 [style=solid label="CONSTANT"]
  135 -> 26 [style=solid label="STRING_LITERAL"]
  135 -> 104 [style=solid label="SEMICOLON"]
  135 -> 27 [style=solid label="LPAREN"]
  135 -> 105 [style=solid label="LBRACKET"]
  135 -> 106 [style=dashed label="compound_statement"]
  135 -> 137 [style=dashed label="statement"]
  135 -> 108 [style=dashed label="selection_statement"]
  135 -> 109 [style=dashed label="iteration_statement"]
  135 -> 110 [style=dashed label="jump_statement"]
  135 -> 111 [style=dashed label="expression_statement"]
  135 -> 112 [style=dashed label="expression"]
  135 -> 29 [style=dashed label="assignment_expression"]
  135 -> 30 [style=dashed label="logical_or_expression"]
  135 -> 31 [style=dashed label="logical_and_expression"]
  135 -> 32 [style=dashed label="inclusive_or_expression"]
  135 -> 33 [style=dashed label="exclusive_or_expression"]
  135 -> 34 [style=dashed label="and_expression"]
  135 -> 35 [style=dashed label="equality_expression"]
  135 -> 36 [style=dashed label="relational_expression"]
  135 -> 37 [style=dashed label="shift_expression"]
  135 -> 38 [style=dashed label="additive_expression"]
  135 -> 39 [style=dashed label="multiplicative_expression"]
  135 -> 40 [style=dashed label="primary_expression"]
  136 [label="State 136\n\l 34 selection_statement: IF_KW LPAREN expression RPAREN statement •\l 35                    | IF_KW LPAREN expression RPAREN statement • ELSE_KW statement\l"]
  136 -> 138 [style=solid label="ELSE_KW"]
  136 -> "136R34" [style=solid]
 "136R34" [label="R34", fillcolor=3, shape=diamond, style=filled]
  137 [label="State 137\n\l 36 iteration_statement: WHILE_KW LPAREN expression RPAREN statement •\l"]
  137 -> "137R36" [style=solid]
 "137R36" [label="R36", fillcolor=3, shape=diamond, style=filled]
  138 [label="State 138\n\l 35 selection_statement: IF_KW LPAREN expression RPAREN statement ELSE_KW • statement\l"]
  138 -> 99 [style=solid label="RETURN_KW"]
  138 -> 100 [style=solid label="IF_KW"]
  138 -> 101 [style=solid label="CONTINUE_KW"]
  138 -> 102 [style=solid label="BREAK_KW"]
  138 -> 103 [style=solid label="WHILE_KW"]
  138 -> 24 [style=solid label="IDENTIFIER"]
  138 -> 25 [style=solid label="CONSTANT"]
  138 -> 26 [style=solid label="STRING_LITERAL"]
  138 -> 104 [style=solid label="SEMICOLON"]
  138 -> 27 [style=solid label="LPAREN"]
  138 -> 105 [style=solid label="LBRACKET"]
  138 -> 106 [style=dashed label="compound_statement"]
  138 -> 139 [style=dashed label="statement"]
  138 -> 108 [style=dashed label="selection_statement"]
  138 -> 109 [style=dashed label="iteration_statement"]
  138 -> 110 [style=dashed label="jump_statement"]
  138 -> 111 [style=dashed label="expression_statement"]
  138 -> 112 [style=dashed label="expression"]
  138 -> 29 [style=dashed label="assignment_expression"]
  138 -> 30 [style=dashed label="logical_or_expression"]
  138 -> 31 [style=dashed label="logical_and_expression"]
  138 -> 32 [style=dashed label="inclusive_or_expression"]
  138 -> 33 [style=dashed label="exclusive_or_expression"]
  138 -> 34 [style=dashed label="and_expression"]
  138 -> 35 [style=dashed label="equality_expression"]
  138 -> 36 [style=dashed label="relational_expression"]
  138 -> 37 [style=dashed label="shift_expression"]
  138 -> 38 [style=dashed label="additive_expression"]
  138 -> 39 [style=dashed label="multiplicative_expression"]
  138 -> 40 [style=dashed label="primary_expression"]
  139 [label="State 139\n\l 35 selection_statement: IF_KW LPAREN expression RPAREN statement ELSE_KW statement •\l"]
  139 -> "139R35" [style=solid]
 "139R35" [label="R35", fillcolor=3, shape=diamond, style=filled]
}
